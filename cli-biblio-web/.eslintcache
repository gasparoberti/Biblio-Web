[{"D:\\Documentos\\Proyectos\\c#\\Biblio-React-NetCore\\cli-biblio-web\\src\\index.js":"1","D:\\Documentos\\Proyectos\\c#\\Biblio-React-NetCore\\cli-biblio-web\\src\\reportWebVitals.js":"2","D:\\Documentos\\Proyectos\\c#\\Biblio-React-NetCore\\cli-biblio-web\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":6571,"mtime":1610300387205,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"9c3f38",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\Documentos\\Proyectos\\c#\\Biblio-React-NetCore\\cli-biblio-web\\src\\index.js",[],["16","17"],"D:\\Documentos\\Proyectos\\c#\\Biblio-React-NetCore\\cli-biblio-web\\src\\reportWebVitals.js",[],"D:\\Documentos\\Proyectos\\c#\\Biblio-React-NetCore\\cli-biblio-web\\src\\App.js",["18"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\n\nfunction App() {\n  const baseUrl=\"https://localhost:44368/api/libros\";\n  const [data, setData]=useState([]);\n  const [modalInsertar, setModalInsertar]=useState(false);\n  const [modalEditar, setModalEditar]=useState(false);\n  const [modalEliminar, setModalEliminar]=useState(false);\n  const [libroSeleccionado, setLibroSeleccionado]=useState({\n    id:'',\n    nombre:'',\n    anio:'',\n    autor:''\n  })\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setLibroSeleccionado({\n      ...libroSeleccionado,\n      [name]: value\n    });\n    console.log(libroSeleccionado);\n  }\n\n  const cambiarEstadoModalInsertar=()=>{\n    setModalInsertar(!modalInsertar);\n  }\n\n  const cambiarEstadoModalEditar=()=>{\n    setModalEditar(!modalEditar);\n  }\n\n  const cambiarEstadoModalEliminar=()=>{\n    setModalEliminar(!modalEliminar);\n  }\n\n  const peicionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n      setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const peticionPost=async()=>{\n    delete libroSeleccionado.id;\n    libroSeleccionado.anio=parseInt(libroSeleccionado.anio);\n    await axios.post(baseUrl, libroSeleccionado)\n    .then(response=>{\n      setData(data.concat(response.data));\n      cambiarEstadoModalInsertar();\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const peticionPut=async()=>{\n    libroSeleccionado.anio=parseInt(libroSeleccionado.anio);\n    await axios.put(baseUrl + \"/\" + libroSeleccionado.id, libroSeleccionado)\n    .then(response=>{\n      var respuesta=response.data;\n      var dataAux=data;\n      dataAux.map(libro=>{\n        if(libro.id===libroSeleccionado.id){\n          libro.nombre=respuesta.nombre;\n          libro.anio=respuesta.anio;\n          libro.autor=respuesta.autor;\n        }\n      })\n      cambiarEstadoModalEditar();\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  \n  const peticionDelete=async()=>{\n    await axios.delete(baseUrl + \"/\" + libroSeleccionado.id)\n    .then(response=>{\n      setData(data.filter(libro=>libro.id!==response.data));\n      cambiarEstadoModalEliminar();\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const seleccionarLibro=(libro, caso)=>{\n    setLibroSeleccionado(libro);\n\n    (caso===\"Editar\") ?\n    cambiarEstadoModalEditar() : cambiarEstadoModalEliminar();\n  }\n\n  useEffect(()=>{\n    peicionGet();\n  },[])\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <br/><br/>\n        <button className=\"btn btn-success\" onClick={()=>cambiarEstadoModalInsertar()}>Insertar Nuevo Libro</button>\n        <br/><br/>\n\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Nombre</th>\n              <th>A単o</th>\n              <th>Autor</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map(libro=>(\n              <tr key={libro.id}>\n                <td>{libro.id}</td>\n                <td>{libro.nombre}</td>\n                <td>{libro.anio}</td>\n                <td>{libro.autor}</td>\n                <td>\n                  <button className=\"btn btn-primary\" onClick={()=>seleccionarLibro(libro, \"Editar\")}>Editar</button> {\"\"}\n                  <button className=\"btn btn-danger\" onClick={()=>seleccionarLibro(libro, \"Eliminar\")}>Eliminar</button> {\"\"}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <Modal isOpen={modalInsertar}>\n          <ModalHeader>Nuevo Libro</ModalHeader>\n          <ModalBody>\n            <div className=\"form-group\">\n              <label>Nombre: </label>\n              <br />\n              <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange}></input>\n              \n              <label>A単o: </label>\n              <br />\n              <input type=\"text\" className=\"form-control\" name=\"anio\" onChange={handleChange}></input>\n              \n              <label>Autor: </label>\n              <br />\n              <input type=\"text\" className=\"form-control\" name=\"autor\" onChange={handleChange}></input>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <button className=\"btn btn-primary\" onClick={()=>peticionPost()}>Insertar</button>\n            <button className=\"btn btn-danger\" onClick={()=>cambiarEstadoModalInsertar()}>Cancelar</button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={modalEditar}>\n          <ModalHeader>Editar Libro</ModalHeader>\n          <ModalBody>\n            <div className=\"form-group\">\n              <label>ID: </label>\n              <br />\n              <input type=\"text\" readOnly className=\"form-control\" onChange={handleChange} value={libroSeleccionado && libroSeleccionado.id}></input>\n              \n              <label>Nombre: </label>\n              <br />\n              <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange} value={libroSeleccionado && libroSeleccionado.nombre}></input>\n              \n              <label>A単o: </label>\n              <br />\n              <input type=\"text\" className=\"form-control\" name=\"anio\" onChange={handleChange} value={libroSeleccionado && libroSeleccionado.anio}></input>\n              \n              <label>Autor: </label>\n              <br />\n              <input type=\"text\" className=\"form-control\" name=\"autor\" onChange={handleChange} value={libroSeleccionado && libroSeleccionado.autor}></input>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <button className=\"btn btn-primary\" onClick={()=>peticionPut()}>Editar</button>\n            <button className=\"btn btn-danger\" onClick={()=>cambiarEstadoModalEditar()}>Cancelar</button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={modalEliminar}>\n          <ModalHeader>Editar Libro</ModalHeader>\n          <ModalBody>\n            多Estas seguro que deseas eliminar el libro {libroSeleccionado && libroSeleccionado.nombre}?\n          </ModalBody>\n          <ModalFooter>\n            <button className=\"btn btn-danger\" onClick={()=>peticionDelete()}>Si</button>\n            <button className=\"btn btn-primary\" onClick={()=>cambiarEstadoModalEliminar()}>No</button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default App;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":68,"column":24,"nodeType":"25","messageId":"26","endLine":68,"endColumn":26},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]